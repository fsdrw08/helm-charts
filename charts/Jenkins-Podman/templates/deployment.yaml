apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: jenkins-controller
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.jenkinsController.autoscaling.enabled }}
  replicas: {{ .Values.jenkinsController.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: jenkins-controller
  template:
    metadata:
      {{- if .Values.jenkinsController.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: jenkins-controller
        {{- if .Values.jenkinsController.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "jenkins.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.jenkinsController.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.jenkinsController.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.jenkinsController.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "jenkins.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          # command:
          #   - %%commands%%
          securityContext: {{- include "common.tplvalues.render" (dict "value" .Values.volumePermissions.containerSecurityContext "context" $) | nindent 12 }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: jenkins-home
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
        {{- end }}
        {{- if .Values.jenkinsController.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: jenkins
          image: {{ template "jenkins.image" . }}
          imagePullPolicy: {{ .Values.jenkinsController.image.pullPolicy }}
          {{- if .Values.jenkinsController.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.jenkinsController.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.jenkinsController.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.jenkinsController.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            
            {{- if or .Values.jenkinsController.additionalSecrets .Values.jenkinsController.adminSecret }}
            - name: SECRETS
              value: /run/secrets/additional
            {{- end }}
            {{- if .Values.jenkinsController.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.jenkinsController.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.jenkinsController.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.jenkinsController.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.jenkinsController.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.jenkinsController.resources }}
          resources: {{- toYaml .Values.jenkinsController.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.jenkinsController.containerPorts.http }}
            # - name: https
            #   containerPort: {{ .Values.jenkinsController.containerPorts.https }}
          {{- if .Values.jenkinsController.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.jenkinsController.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.jenkinsController.livenessProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          {{- if .Values.jenkinsController.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.jenkinsController.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.jenkinsController.readinessProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          {{- if .Values.jenkinsController.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.jenkinsController.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.jenkinsController.startupProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          volumeMounts:
            - name: jenkins-home
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- if or .Values.jenkinsController.additionalSecrets .Values.jenkinsController.adminSecret }}
            - name: jenkins-secrets
              mountPath: /run/secrets/additional
              readOnly: true
            {{- end }}
          {{- if .Values.jenkinsController.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.jenkinsController.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.jenkinsController.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: foo
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "common.names.fullname" .) .Values.persistence.existingClaim }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        # removed existingSecret related part from https://github.com/jenkinsci/helm-charts/blob/51d16d0762e672fc3fc1a5a064ee19c7c42184dd/charts/jenkins/templates/jenkins-controller-statefulset.yaml#L385-L415
        {{- if or .Values.jenkinsController.additionalSecrets .Values.jenkinsController.adminSecret }}
        - name: jenkins-secrets
          projected:
            sources:
            {{- if .Values.jenkinsController.additionalSecrets }}
            - secret:
                name: {{ template "common.names.fullname" . }}-additional-secrets
            {{- end }}
            {{- if .Values.jenkinsController.adminSecret }}
            - secret:
                name: {{ template "common.names.fullname" . }}
                items:
                  - key: {{ .Values.jenkinsController.admin.userKey | default "jenkins-admin-user" }}
                    path: chart-admin-username
                  - key: {{ .Values.jenkinsController.admin.passwordKey | default "jenkins-admin-password" }}
                    path: chart-admin-password
            {{- end }}
        {{- end }}
        {{- if .Values.jenkinsController.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.jenkinsController.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
