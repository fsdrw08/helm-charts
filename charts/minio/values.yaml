## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

## @param minio.workloadKind specify the deploy kindï¼š Pod, or Deployment
workloadKind: Pod
## @section minio Parameters
##

## %%MAIN_CONTAINER/POD_DESCRIPTION%%
##
minio:
  ## minio image
  ## ref: https://quay.io/repository/minio/minio?tab=tags
  ## @param minio.image.registry minio image registry
  ## @param minio.image.repository minio image repository
  ## @param minio.image.tag minio image tag (immutable tags are recommended)
  ## @param minio.image.digest minio image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param minio.image.pullPolicy minio image pull policy
  ## @param minio.image.pullSecrets minio image pull secrets
  ##
  image:
    registry: quay.io
    repository: minio/minio
    tag: RELEASE.2025-04-08T15-41-24Z
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param minio.podRestartPolicy specify the pod restart policy if workloadKind set to Pod
  ## available options: Always, OnFailure, Never
  podRestartPolicy: Never
  ## @param minio.replicaCount Number of minio replicas to deploy
  ##
  replicaCount: 1
  ## @param minio.containerPorts minio container port to expose to host
  ## e.g.
  ## containerPorts:
  ##   - name: http
  ##     containerPort: 80
  ##     hostPort: 80
  ##     hostIP: 192.168.255.10
  ##     protocol: TCP
  ##   - name: https
  ##     containerPort: 443
  ##     hostPort: 443
  ##     hostIP: 192.168.255.10
  ##     protocol: TCP
  ##
  containerPorts: []
  ## Configure extra options for minio containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param minio.livenessProbe.enabled Enable livenessProbe on minio containers
  ## @param minio.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param minio.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param minio.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param minio.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param minio.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 600
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
    exec:
      command:
        - mc
        - ready
        - local
  ## @param minio.readinessProbe.enabled Enable readinessProbe on minio containers
  ## @param minio.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param minio.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param minio.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param minio.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param minio.readinessProbe.successThreshold Success threshold for readinessProbe
  ## note: podman not support readinessProbe currently
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: foo
    periodSeconds: bar
    timeoutSeconds: foo
    failureThreshold: bar
    successThreshold: foo
  ## @param minio.startupProbe.enabled Enable startupProbe on minio containers
  ## @param minio.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param minio.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param minio.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param minio.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param minio.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: foo
    periodSeconds: bar
    timeoutSeconds: foo
    failureThreshold: bar
    successThreshold: foo
  ## @param minio.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param minio.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param minio.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## minio resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param minio.resourcesPreset Set minio container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if minio.resources is set (minio.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "medium"
  ## @param minio.resources Set minio container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param minio.podSecurityContext.enabled Enabled minio pods' Security Context
  ## @param minio.podSecurityContext.fsGroup Set minio pod's Security Context fsGroup
  ## note: podman kube play does not support fsGroup yet
  ##
  podSecurityContext:
    enabled: false
    # fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param minio.containerSecurityContext.enabled Enabled minio containers' Security Context
  ## @param minio.containerSecurityContext.runAsUser Set minio containers' Security Context runAsUser
  ## @param minio.containerSecurityContext.runAsNonRoot Set minio containers' Security Context runAsNonRoot
  ## @param minio.containerSecurityContext.readOnlyRootFilesystem Set minio containers' Security Context runAsNonRoot
  ## ref: https://github.com/minio/minio/blob/RELEASE.2025-04-08T15-41-24Z/helm/minio/values.yaml#L272-L277
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    readOnlyRootFilesystem: false

  # %%OTHER_PARAMETERS_RELATED_TO_THIS_CONTAINER/POD%%
  ## @param minio.config MinIO settings define runtime behavior of the MinIO server process.
  ## all content under this block will place in the path which set in env var MINIO_CONFIG_ENV_FILE (defaul: /etc/config.env)
  ## config keys must have:
  ##   MINIO_OPTS, MINIO_VOLUMES, MINIO_CONFIG_ENV_FILE
  ## ref: https://min.io/docs/minio/linux/reference/minio-server/settings.html
  ##
  config:
    ## @param minio.config.MINIO_OPTS Set a string of parameters to use when starting the MinIO Server.
    ## ref: https://min.io/docs/minio/linux/reference/minio-server/settings/core.html#envvar.MINIO_OPTS
    ## ref: https://min.io/docs/minio/linux/reference/minio-server/minio-server.html#minio-server-parameters
    ##
    MINIO_OPTS: --address=:9000 --console-address=:9001
    ## @param minio.config.MINIO_VOLUMES The directories or drives the minio server process uses as the storage backend.
    ## Functionally equivalent to setting minio server DIRECTORIES. Use this value when configuring MinIO to run using an environment file.
    ## ref: https://min.io/docs/minio/linux/reference/minio-server/settings/core.html#envvar.MINIO_VOLUMES
    ## ref: https://min.io/docs/minio/container/operations/install-deploy-manage/deploy-minio-single-node-single-drive.html#id7
    ## ref: https://github.com/minio/minio/blob/RELEASE.2025-04-08T15-41-24Z/Dockerfile
    ##
    MINIO_VOLUMES: /data
    ## @param minio.config.MINIO_CONFIG_ENV_FILE Specifies the full path to the file the MinIO server process uses for loading environment variables.
    ## Sets a MinIO environment variable pointing to the container-mounted path of the environment file.
    ## ref: https://min.io/docs/minio/container/operations/install-deploy-manage/deploy-minio-single-node-single-drive.html#id7
    ## ref: https://min.io/docs/minio/linux/reference/minio-server/settings/core.html#envvar.MINIO_CONFIG_ENV_FILE
    ##
    MINIO_CONFIG_ENV_FILE: /etc/config.env
    ## @param minio.config.MINIO_ROOT_USER The access key for the root user.
    ## @param minio.config.MINIO_ROOT_PASSWORD The secret key for the root user.
    ## ref: https://min.io/docs/minio/linux/reference/minio-server/settings/root-credentials.html
    ##
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
    ## @param minio.config.MINIO_UPDATE In place update is true by default if the MINIO_UPDATE is not set or is not set to 'off',
    ## if MINIO_UPDATE is set to 'off' then in-place update is off.
    ## ref: https://github.com/minio/minio/blob/RELEASE.2025-04-08T15-41-24Z/cmd/common-main.go#L808
    ##
    MINIO_UPDATE: "off"
  ## @param minio.tls secret setting of cert and key or whatever tls content will set in the container
  ##
  tls:
    ## @param minio.tls.mountPath secret mount path setting of cert and key or whatever tls content will set in the container
    ## ref: https://github.com/minio/minio/blob/RELEASE.2025-04-08T15-41-24Z/helm/minio/values.yaml#L109
    ## ref: https://min.io/docs/minio/linux/operations/network-encryption.html#enabling-tls
    ##
    mountPath: /etc/minio/certs
    ## @param minio.tls.contents secret content of default domain cert/key and additional domain cert/key and custom CAs tls content will set in the container
    ## You can set the content key as whatever file name you like
    ## But the tls set in configFiles above must match with the settings here
    ## key and certificate should start with -----BEGIN CERTIFICATE----- or -----BEGIN RSA PRIVATE KEY-----
    ## e.g.
    ## contents:
    ##   public.crt: "xxx"
    ##   private.key: "xxx"
    ##   additionalDomains:
    ##     - name: test
    ##       public.crt: "xxx"
    ##       private.key: "xxx"
    ##   CAs:
    ##     test.crt: test
    ##
    contents:
      {}
      # ## default domain cert and key
      # public.crt: "xxx"
      # private.key: "xxx"
      # ## additional domain certs and keys
      # additionalDomains:
      #   - name: test
      #     public.crt: "xxx"
      #     private.key: "xxx"
      # ## custom CAs
      # CAs:
      #   test.crt: "xxx"
  ## @param minio.existingConfigmap The name of an existing ConfigMap with your custom configuration for minio
  ##
  existingConfigmap:
  ## @param minio.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param minio.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param minio.hostAliases minio pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param minio.podLabels Extra labels for minio pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param minio.podAnnotations Annotations for minio pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations:
    io.podman.annotations.userns: keep-id:uid=1000,gid=1000
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param minio.autoscaling.enabled Enable autoscaling for minio
  ## @param minio.autoscaling.minReplicas Minimum number of minio replicas
  ## @param minio.autoscaling.maxReplicas Maximum number of minio replicas
  ## @param minio.autoscaling.targetCPU Target CPU utilization percentage
  ## @param minio.autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: ""
    maxReplicas: ""
    targetCPU: ""
    targetMemory: ""

  ## @param minio.extraEnvVars Array with extra environment variables to add to minio nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param minio.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for minio nodes
  ##
  extraEnvVarsCM: ""
  ## @param minio.extraEnvVarsSecret Name of existing Secret containing extra env vars for minio nodes
  ##
  extraEnvVarsSecret: ""
  ## @param minio.extraVolumes Optionally specify extra list of additional volumes for the minio pod(s)
  ##
  extraVolumes: []
  ## @param minio.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the minio container(s)
  ##
  extraVolumeMounts: []
  ## @param minio.sidecars Add additional sidecar containers to the minio pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param minio.initContainers Add additional init containers to the minio pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

## @section Persistence Parameters
##

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.mountPath Path to mount the volume at.
  ##
  mountPath: /data
  ## @param persistence.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
  ##
  subPath: ""
  ## @param persistence.storageClass Storage class of backing PVC
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
  ## @param persistence.accessModes Persistent Volume Access Modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Size of data volume
  ##
  size: 8Gi
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
## @section Init Container Parameters
##

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## OS Shell + Utility image
  ## ref: https://hub.docker.com/r/bitnami/os-shell/tags/
  ## @param volumePermissions.image.registry OS Shell + Utility image registry
  ## @param volumePermissions.image.repository OS Shell + Utility image repository
  ## @param volumePermissions.image.tag OS Shell + Utility image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy OS Shell + Utility image pull policy
  ## @param volumePermissions.image.pullSecrets OS Shell + Utility image pull secrets
  ##
  image:
    registry: quay.io
    repository: minio/minio
    tag: RELEASE.2025-04-08T15-41-24Z
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param volumePermissions.resourcesPreset Set init container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if volumePermissions.resources is set (volumePermissions.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param volumePermissions.resources Set init container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

## @section Other Parameters
##

## %%SUBCHART_CONTAINER/POD_DESCRIPTION%%
##
# %%SUBCHART_NAME%%:
SUBCHART_NAME:
  enabled: false
  # %%OTHER_PARAMETERS_RELATED_TO_THIS_SUBCHART%%
