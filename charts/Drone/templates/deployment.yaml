apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: %%COMPONENT_NAME%%
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.droneServer.autoscaling.enabled }}
  replicas: {{ .Values.droneServer.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: %%COMPONENT_NAME%%
  template:
    metadata:
      {{- if .Values.droneServer.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: %%COMPONENT_NAME%%
        {{- if .Values.droneServer.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "drone.serviceAccountName" . }}
      {{- include "drone.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.droneServer.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.droneServer.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.droneServer.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "drone.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - %%commands%%
          securityContext: {{- include "common.tplvalues.render" (dict "value" .Values.volumePermissions.containerSecurityContext "context" $) | nindent 12 }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: foo
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
        {{- end }}
        {{- if .Values.droneServer.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: droneServer
          image: {{ template "drone.image" . }}
          imagePullPolicy: {{ .Values.droneServer.image.pullPolicy }}
          {{- if .Values.droneServer.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.droneServer.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.droneServer.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.droneServer.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.droneServer.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.droneServer.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.droneServer.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.droneServer.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.droneServer.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.droneServer.resources }}
          resources: {{- toYaml .Values.droneServer.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.droneServer.containerPorts.http }}
            - name: https
              containerPort: {{ .Values.droneServer.containerPorts.https }}
          {{- if .Values.droneServer.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.droneServer.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.droneServer.livenessProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          {{- if .Values.droneServer.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.droneServer.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.droneServer.readinessProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          {{- if .Values.droneServer.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.droneServer.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.droneServer.startupProbe "enabled") "context" $) | nindent 12 }}
            %%httpGet || command || etc%%
          {{- end }}
          volumeMounts:
            - name: storage-volume
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
          {{- if .Values.droneServer.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.droneServer.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.droneServer.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: storage-volume
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "common.names.fullname" .) .Values.persistence.existingClaim }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.droneServer.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.droneServer.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
