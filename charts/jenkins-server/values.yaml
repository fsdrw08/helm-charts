# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

## @param instanceKind specify the deploy kindï¼š Pod, or Deployment
instanceKind: Pod

## @section jenkinsController Parameters
##

## %%MAIN_CONTAINER/POD_DESCRIPTION%%
##
controller:
  ## Bitnami %%MAIN_CONTAINER%% image
  ## ref: https://hub.docker.com/r/jenkins/jenkins/tags/
  ## @param controller.image.registry %%MAIN_CONTAINER%% image registry
  ## @param controller.image.repository %%MAIN_CONTAINER%% image repository
  ## @param controller.image.tag %%MAIN_CONTAINER%% image tag (immutable tags are recommended)
  ## @param controller.image.digest %%MAIN_CONTAINER%% image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param controller.image.pullPolicy %%MAIN_CONTAINER%% image pull policy
  ## @param controller.image.pullSecrets %%MAIN_CONTAINER%% image pull secrets
  ## @param controller.image.debug Enable %%MAIN_CONTAINER%% image debug mode
  ##
  image:
    registry: docker.io
    repository: jenkins/jenkins
    tag: 2.401.2-lts-jdk11
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  ## @param controller.podRestartPolicy specify the pod restart policy if instanceKind set to Pod
  ## available options: Always, OnFailure, Never
  podRestartPolicy: Never
  ## @param controller.replicaCount Number of jenkins replicas to deploy
  ##
  replicaCount: 1
  ## @param controller.containerPorts jenkins controller container port to expose to host
  ## containerPorts:
  ##   - name: http
  ##     containerPort: {{ default 8080 .Values.controller.targetPort }}
  ##     hostIP: 192.168.255.10
  ##     protocol: TCP
  ##   - name: https
  ##     containerPort: 443
  ##     hostIP: 192.168.255.10
  ##     protocol: TCP
  ##
  containerPorts: {}
  ## @param controller.jenkinsUriPrefix If you set this prefix and use ingress controller then you might want to set the ingress path below
  ##
  jenkinsUriPrefix: "" # "/jenkins"
  ## Configure extra options for jenkins containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param controller.livenessProbe.enabled Enable livenessProbe on jenkins containers
  ## @param controller.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param controller.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param controller.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param controller.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param controller.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 5
    successThreshold: 1
    httpGet:
      path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
      port: http
  ## @param controller.readinessProbe.enabled Enable readinessProbe on jenkins containers
  ## @param controller.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param controller.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param controller.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param controller.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param controller.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 5
    successThreshold: 1
    httpGet:
      path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
      port: http
  ## @param controller.startupProbe.enabled Enable startupProbe on jenkins containers
  ## @param controller.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param controller.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param controller.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param controller.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param controller.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 5
    successThreshold: 1
    httpGet:
      path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
      port: http
  ## @param controller.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param controller.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param controller.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## jenkins resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param controller.resources.limits The resources limits for the jenkins containers
  ## @param controller.resources.requests The requested resources for the jenkins containers
  ##
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param controller.podSecurityContext.enabled Enabled jenkins pods' Security Context
  ## @param controller.podSecurityContext.fsGroup Set jenkins pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    runAsUser: 1000
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param controller.containerSecurityContext.enabled Enabled jenkins containers' Security Context
  ## @param controller.containerSecurityContext.runAsUser Set jenkins containers' Security Context runAsUser
  ## @param controller.containerSecurityContext.runAsNonRoot Set jenkins containers' Security Context runAsNonRoot
  ## @param controller.containerSecurityContext.readOnlyRootFilesystem Set jenkins containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false

  # %%OTHER_PARAMETERS_RELATED_TO_THIS_CONTAINER/POD%%
  ## @param controller.installPlugins List of plugins to be install during Jenkins controller start
  ##
  installPlugins:
    - configuration-as-code:1647.ve39ca_b_829b_42
    - workflow-aggregator:596.v8c21c963d92d
    - git:5.1.0
  ## @param controller.overwritePluginsFromImage
  ## Configures if plugins bundled with `controller.image` should be overwritten with the values of 'controller.installPlugins' on upgrade or redeployment.
  ##
  overwritePluginsFromImage: true
  ## @param controller.jenkinsHome jenkins home dir
  ## This values should not be changed unless you use your custom image of jenkins or any devired from.
  ## If you want to use Cloudbees Jenkins Distribution docker, you should set jenkinsHome: "/var/cloudbees-jenkins-distribution"
  ##
  jenkinsHome: "/var/jenkins_home"
  ## @param controller.jenkinsRef The path to jenkins ref dir
  ## This values should not be changed unless you use your custom image of jenkins or any devired from. If you want to use
  ## Cloudbees Jenkins Distribution docker, you should set jenkinsRef: "/usr/share/cloudbees-jenkins-distribution/ref"
  ##
  jenkinsRef: "/usr/share/jenkins/ref"
  ## @param controller.targetPort port params set to jenkins and also for expose in container level
  targetPort: 8080
  ## @param controller.httpsKeyStore keystore for https (usually contain cert and private key)
  ##
  httpsKeyStore:
    jenkinsHttpsJksSecretName: ""
    enable: false
    disableSecretMount: false
    ## @param controller.httpsKeyStore.httpPort HTTP Port that Jenkins should listen on along with HTTPS
    ## It also serves liveness and readiness probs port. When HTTPS keystore is enabled servicePort and targetPort will be used as HTTPS port
    httpPort: 8081
    path: "/var/jenkins_keystore"
    fileName: "keystore.jks"
    password: "password"
    ## @param controller.httpsKeyStore.jenkinsKeyStoreBase64Encoded
    ## Convert keystore.jks files content to base64 ( cat keystore.jks | base64 ) and put the output here
    jenkinsKeyStoreBase64Encoded: |
      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

  ## @ param controller.initScripts List of groovy init scripts to be executed during Jenkins controller start
  ## e.g.
  ## initScripts:
  ##   - |
  ##     print 'adding global pipeline libraries, register properties, bootstrap jobs...'
  ##
  initScripts: []

  ## @param controller.adminSecret The default configuration uses this secret to configure an admin user
  ## If you don't need that user or use a different security realm then you can disable it
  ##
  adminSecret: true
  ## @param controller.adminUser When enabling LDAP or another non-Jenkins identity source, the built-in admin account will no longer exist.
  ## If you disable the non-Jenkins identity store and instead use the Jenkins internal one,
  ## you should revert controller.adminUser to your preferred admin user:
  ##
  adminUser: "admin"
  ## @param controller.adminPassword Defaults to a random 10-character alphanumeric string if not set
  ##
  adminPassword: ""
  admin:
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password
  ## @param controller.additionalSecrets
  ## Usually it's for JCasC (Jenkins config as code) to manage credentials and other sensitive information in the YAML configuration files
  # additionalSecrets:
  #   - name: nameOfSecret
  #     value: secretText
  additionalSecrets: []
  ##
  ## @param controller.provision initContainer for jenkins controller provision
  provision:
    ##
    ## @param controller.provision.extraEnvVars Environment variables that get added to the provision init container (useful for e.g. http_proxy)
    ## e.g.
    ## extraEnvVars:
    ##   - name: http_proxy
    ##     value: "http://192.168.64.1:3128"
    extraEnvVars: []
    ##
    ## @param controller.provision.extraEnvVarsFrom Environment variables that get added to the provision init container (useful for e.g. http_proxy)
    ## e.g.
    ## extraEnvVarsFrom:
    ##   - configMapRef:
    ##     name: xxx
    extraEnvVarsFrom: []
    ##
    ## jenkins provision initContainer resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param controller.provision.resources.limits The resources limits for the jenkins provision initContainer
    ## @param controller.provision.resources.requests The requested resources for the jenkins provision initContainer
    ##
    resources:
      limits:
        cpu: 400m
        memory: 512Mi
      requests: {}
  ## @param controller.existingConfigmap The name of an existing ConfigMap with your custom configuration for jenkins
  ##
  existingConfigmap:
  ## @param controller.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param controller.args Override default container args (useful when using custom images)
  ## e.g. Overrides the default arguments passed to the war
  ## args:
  ##   - --httpPort=8080
  ##
  args: []
  ## @param controller.hostAliases jenkins pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param controller.podLabels Extra labels for jenkins pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param controller.podAnnotations Annotations for jenkins pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param controller.autoscaling.enabled Enable autoscaling for jenkinsController
  ## @param controller.autoscaling.minReplicas Minimum number of jenkinsController replicas
  ## @param controller.autoscaling.maxReplicas Maximum number of jenkinsController replicas
  ## @param controller.autoscaling.targetCPU Target CPU utilization percentage
  ## @param controller.autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: ""
    maxReplicas: ""
    targetCPU: ""
    targetMemory: ""
  ##
  ## @param controller.extraEnvVars Array with extra environment variables to add to jenkins nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param controller.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for jenkins nodes
  ##
  extraEnvVarsCM: ""
  ## @param controller.extraEnvVarsSecret Name of existing Secret containing extra env vars for jenkins nodes
  ##
  extraEnvVarsSecret: ""
  ## @param controller.extraVolumes Optionally specify extra list of additional volumes for the jenkins pod(s)
  ##
  extraVolumes: []
  ## @param controller.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the jenkins container(s)
  ##
  extraVolumeMounts: []
  ## @param controller.sidecars Add additional sidecar containers to the jenkins pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param controller.initContainers Add additional init containers to the jenkins pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

## @section Persistence Parameters
##

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.mountPath Path to mount the volume at.
  ##
  mountPath: /var/jenkins_home
  ## @param persistence.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
  ##
  subPath: ""
  ## @param persistence.storageClass Storage class of backing PVC
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
  ## @param persistence.accessModes Persistent Volume Access Modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Size of data volume
  ##
  size: 8Gi
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
## @section Init Container Parameters
##

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## OS Shell + Utility image
  ## ref: https://hub.docker.com/r/bitnami/os-shell/tags/
  ## @param volumePermissions.image.registry OS Shell + Utility image registry
  ## @param volumePermissions.image.repository OS Shell + Utility image repository
  ## @param volumePermissions.image.tag OS Shell + Utility image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy OS Shell + Utility image pull policy
  ## @param volumePermissions.image.pullSecrets OS Shell + Utility image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/os-shell
    tag: 11-debian-11-r2
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

## @section Other Parameters
##

## %%SUBCHART_CONTAINER/POD_DESCRIPTION%%
##
# %%SUBCHART_NAME%%:
SUBCHART_NAME:
  enabled: false
  # %%OTHER_PARAMETERS_RELATED_TO_THIS_SUBCHART%%
